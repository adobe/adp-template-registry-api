<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="68" failures="0" errors="0" time="0.908">
  <testsuite name="LIST templates" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:12" time="0.431" tests="15">
    <testcase classname="LIST templates main should be defined" name="LIST templates main should be defined" time="0.001">
    </testcase>
    <testcase classname="LIST templates Successful LIST request without filters, should return 200" name="LIST templates Successful LIST request without filters, should return 200" time="0.043">
    </testcase>
    <testcase classname="LIST templates Successful simple filtering by one field, should return 200" name="LIST templates Successful simple filtering by one field, should return 200" time="0.019">
    </testcase>
    <testcase classname="LIST templates Successful simple filtering by one field with value exclusion, should return 200" name="LIST templates Successful simple filtering by one field with value exclusion, should return 200" time="0.013">
    </testcase>
    <testcase classname="LIST templates Successful simple filtering by one field value exclusion only, should return 200" name="LIST templates Successful simple filtering by one field value exclusion only, should return 200" time="0.014">
    </testcase>
    <testcase classname="LIST templates Successful complex filtering by multiple fields, should return 200" name="LIST templates Successful complex filtering by multiple fields, should return 200" time="0.014">
    </testcase>
    <testcase classname="LIST templates Successful complex filtering by multiple fields with value exclusion, should return 200" name="LIST templates Successful complex filtering by multiple fields with value exclusion, should return 200" time="0.02">
    </testcase>
    <testcase classname="LIST templates No templates matching filters, should return 200" name="LIST templates No templates matching filters, should return 200" time="0.014">
    </testcase>
    <testcase classname="LIST templates Successful sorting by names in descending order, should return 200" name="LIST templates Successful sorting by names in descending order, should return 200" time="0.014">
    </testcase>
    <testcase classname="LIST templates Successful sorting by multiple properties, should return 200" name="LIST templates Successful sorting by multiple properties, should return 200" time="0.013">
    </testcase>
    <testcase classname="LIST templates Unsupported HTTP method, should return 405" name="LIST templates Unsupported HTTP method, should return 405" time="0.001">
    </testcase>
    <testcase classname="LIST templates Filtering by &quot;*&quot;, should return templates that have a query param property set" name="LIST templates Filtering by &quot;*&quot;, should return templates that have a query param property set" time="0.015">
    </testcase>
    <testcase classname="LIST templates Empty filters (?extensions=), should return templates that do not have a query param property set" name="LIST templates Empty filters (?extensions=), should return templates that do not have a query param property set" time="0.012">
    </testcase>
    <testcase classname="LIST templates Empty filters (?runtime=), should return templates that do not have a query param property set" name="LIST templates Empty filters (?runtime=), should return templates that do not have a query param property set" time="0.014">
    </testcase>
    <testcase classname="LIST templates Support of the &quot;events&quot; filtering that only supports empty and any filters for now" name="LIST templates Support of the &quot;events&quot; filtering that only supports empty and any filters for now" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="DELETE templates" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.045" tests="7">
    <testcase classname="DELETE templates main should be defined" name="DELETE templates main should be defined" time="0.001">
    </testcase>
    <testcase classname="DELETE templates Missing Authorization header, should return 401" name="DELETE templates Missing Authorization header, should return 401" time="0.001">
    </testcase>
    <testcase classname="DELETE templates Unsupported HTTP method, should return 405" name="DELETE templates Unsupported HTTP method, should return 405" time="0">
    </testcase>
    <testcase classname="DELETE templates Invalid token, should return 401" name="DELETE templates Invalid token, should return 401" time="0">
    </testcase>
    <testcase classname="DELETE templates Not admin token, should return 403" name="DELETE templates Not admin token, should return 403" time="0">
    </testcase>
    <testcase classname="DELETE templates Template does not exist, should return 404" name="DELETE templates Template does not exist, should return 404" time="0">
    </testcase>
    <testcase classname="DELETE templates Admin token, should return 200" name="DELETE templates Admin token, should return 200" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Verify communication with IMS" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.053" tests="5">
    <testcase classname="Verify communication with IMS Verify checking that provided IMS access token is valid" name="Verify communication with IMS Verify checking that provided IMS access token is valid" time="0.004">
    </testcase>
    <testcase classname="Verify communication with IMS Verify that exception is thrown for non-valid IMS access token" name="Verify communication with IMS Verify that exception is thrown for non-valid IMS access token" time="0.008">
    </testcase>
    <testcase classname="Verify communication with IMS Verify checking that provided IMS access token belongs to admin user" name="Verify communication with IMS Verify checking that provided IMS access token belongs to admin user" time="0.003">
    </testcase>
    <testcase classname="Verify communication with IMS Verify checking that provided IMS access token does not belong to admin user" name="Verify communication with IMS Verify checking that provided IMS access token does not belong to admin user" time="0.004">
    </testcase>
    <testcase classname="Verify communication with IMS Verify that exception is thrown for non-successful IMS communication" name="Verify communication with IMS Verify that exception is thrown for non-successful IMS communication" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="GET templates" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.125" tests="6">
    <testcase classname="GET templates main should be defined" name="GET templates main should be defined" time="0.001">
    </testcase>
    <testcase classname="GET templates Successful request, should return 200" name="GET templates Successful request, should return 200" time="0.024">
    </testcase>
    <testcase classname="GET templates Successful request for &quot;InVerification&quot; template, should return 200, and a link to the Review github issue" name="GET templates Successful request for &quot;InVerification&quot; template, should return 200, and a link to the Review github issue" time="0.035">
    </testcase>
    <testcase classname="GET templates Template does not exist, should return 404" name="GET templates Template does not exist, should return 404" time="0.01">
    </testcase>
    <testcase classname="GET templates Unsupported HTTP method, should return 405" name="GET templates Unsupported HTTP method, should return 405" time="0">
    </testcase>
    <testcase classname="GET templates Incorrect response, should return 500" name="GET templates Incorrect response, should return 500" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="POST templates" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.093" tests="8">
    <testcase classname="POST templates main should be defined" name="POST templates main should be defined" time="0">
    </testcase>
    <testcase classname="POST templates Missing Authorization header, should return 401" name="POST templates Missing Authorization header, should return 401" time="0.001">
    </testcase>
    <testcase classname="POST templates Missing POST payload, should return 400" name="POST templates Missing POST payload, should return 400" time="0">
    </testcase>
    <testcase classname="POST templates Invalid token, should return 401" name="POST templates Invalid token, should return 401" time="0">
    </testcase>
    <testcase classname="POST templates Unsupported HTTP method, should return 400" name="POST templates Unsupported HTTP method, should return 400" time="0.002">
    </testcase>
    <testcase classname="POST templates Incorrect POST payload, should return 400" name="POST templates Incorrect POST payload, should return 400" time="0.015">
    </testcase>
    <testcase classname="POST templates Template already exists, should return 409" name="POST templates Template already exists, should return 409" time="0.016">
    </testcase>
    <testcase classname="POST templates Adding new template, should return 200" name="POST templates Adding new template, should return 200" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Verify communication with Template Registry" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.048" tests="5">
    <testcase classname="Verify communication with Template Registry Verify finding a template by a template name" name="Verify communication with Template Registry Verify finding a template by a template name" time="0.006">
    </testcase>
    <testcase classname="Verify communication with Template Registry Verify returning NULL for a non-existing template" name="Verify communication with Template Registry Verify returning NULL for a non-existing template" time="0.003">
    </testcase>
    <testcase classname="Verify communication with Template Registry Returns an open &quot;Template Review Request&quot; issue" name="Verify communication with Template Registry Returns an open &quot;Template Review Request&quot; issue" time="0.003">
    </testcase>
    <testcase classname="Verify communication with Template Registry Verify returning NULL for a non-existing open &quot;Template Review Request&quot; issue" name="Verify communication with Template Registry Verify returning NULL for a non-existing open &quot;Template Review Request&quot; issue" time="0">
    </testcase>
    <testcase classname="Verify communication with Template Registry Verify that exception is thrown for non-successful Template Registry communication" name="Verify communication with Template Registry Verify that exception is thrown for non-successful Template Registry communication" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-02-28T11:57:13" time="0.027" tests="22">
    <testcase classname=" interface" name=" interface" time="0.001">
    </testcase>
    <testcase classname="errorResponse (400, errorMessages)" name="errorResponse (400, errorMessages)" time="0">
    </testcase>
    <testcase classname="errorResponse (400, errorMessages, logger)" name="errorResponse (400, errorMessages, logger)" time="0.001">
    </testcase>
    <testcase classname="stringParameters no auth header" name="stringParameters no auth header" time="0">
    </testcase>
    <testcase classname="stringParameters with auth header" name="stringParameters with auth header" time="0.001">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: 1, b: 2 }, [a])" name="checkMissingRequestInputs ({ a: 1, b: 2 }, [a])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: 1 }, [a, b])" name="checkMissingRequestInputs ({ a: 1 }, [a, b])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: { b: { c: 1 } }, f: { g: 2 } }, [a.b.c, f.g.h.i])" name="checkMissingRequestInputs ({ a: { b: { c: 1 } }, f: { g: 2 } }, [a.b.c, f.g.h.i])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: { b: { c: 1 } }, f: { g: 2 } }, [a.b.c, f.g.h])" name="checkMissingRequestInputs ({ a: { b: { c: 1 } }, f: { g: 2 } }, [a.b.c, f.g.h])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: 1, __ow_headers: { h: 1, i: 2 } }, undefined, [h])" name="checkMissingRequestInputs ({ a: 1, __ow_headers: { h: 1, i: 2 } }, undefined, [h])" time="0.001">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: 1, __ow_headers: { f: 2 } }, [a], [h, i])" name="checkMissingRequestInputs ({ a: 1, __ow_headers: { f: 2 } }, [a], [h, i])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ c: 1, __ow_headers: { f: 2 } }, [a, b], [h, i])" name="checkMissingRequestInputs ({ c: 1, __ow_headers: { f: 2 } }, [a, b], [h, i])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: 0 }, [a])" name="checkMissingRequestInputs ({ a: 0 }, [a])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: null }, [a])" name="checkMissingRequestInputs ({ a: null }, [a])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: &apos;&apos; }, [a])" name="checkMissingRequestInputs ({ a: &apos;&apos; }, [a])" time="0">
    </testcase>
    <testcase classname="checkMissingRequestInputs ({ a: undefined }, [a])" name="checkMissingRequestInputs ({ a: undefined }, [a])" time="0">
    </testcase>
    <testcase classname="getBearerToken ({})" name="getBearerToken ({})" time="0.001">
    </testcase>
    <testcase classname="getBearerToken ({ authorization: Bearer fake, __ow_headers: {} })" name="getBearerToken ({ authorization: Bearer fake, __ow_headers: {} })" time="0">
    </testcase>
    <testcase classname="getBearerToken ({ authorization: Bearer fake, __ow_headers: { authorization: fake } })" name="getBearerToken ({ authorization: Bearer fake, __ow_headers: { authorization: fake } })" time="0">
    </testcase>
    <testcase classname="getBearerToken ({ __ow_headers: { authorization: Bearerfake} })" name="getBearerToken ({ __ow_headers: { authorization: Bearerfake} })" time="0">
    </testcase>
    <testcase classname="getBearerToken ({ __ow_headers: { authorization: Bearer fake} })" name="getBearerToken ({ __ow_headers: { authorization: Bearer fake} })" time="0">
    </testcase>
    <testcase classname="getBearerToken ({ __ow_headers: { authorization: Bearer fake Bearer fake} })" name="getBearerToken ({ __ow_headers: { authorization: Bearer fake Bearer fake} })" time="0">
    </testcase>
  </testsuite>
</testsuites>