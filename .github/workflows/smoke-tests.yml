name: Smoke Tests

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options: 
          - Stage
          - Production
        default: 'Stage'
  schedule:
    - cron: '*/5 * * * *' # Run prod every 5 minutes
    - cron: '*/60 * * * *' # Run stage every hour

jobs:
  smoke:
    environment: ${{ inputs.environment || github.event.schedule == '*/5 * * * *' && 'Production' || 'Stage' }}
    name: Smoke test ${{ inputs.environment || github.event.schedule == '*/5 * * * *' && 'Production' || 'Stage' }}
    # we would like to avoid running this workflow in forked repos
    if: github.repository == 'adobe/adp-template-registry-api'
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Clear npm cache
        run: npm cache clean --force
      - name: Install dependencies
        uses: nick-fields/retry@v3
        with: 
          max_attempts: 3
          timeout_minutes: 5
          retry_wait_seconds: 30
          command: npm i --package-lock --package-lock-only && npm ci
      - name: Run smoke tests
        uses: nick-fields/retry@v3
        with: 
          max_attempts: 3
          timeout_minutes: 5
          retry_wait_seconds: 60
          command: npm run test:smoke
        env:
          AIO_RUNTIME_APIHOST: ${{ secrets.AIO_RUNTIME_APIHOST }}
          IMS_CLIENT_ID: ${{ secrets.IMS_CLIENT_ID }}
          IMS_CLIENT_SECRET: ${{ secrets.IMS_CLIENT_SECRET }}
          IMS_AUTH_CODE: ${{ secrets.IMS_AUTH_CODE }}
          IMS_SCOPES: ${{ secrets.IMS_SCOPES }}
          TEMPLATE_REGISTRY_API_URL: ${{ secrets.TEMPLATE_REGISTRY_API_URL }}
      - id: slacknotification
        name: Slack Notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: ${{ inputs.environment || github.event.schedule == '*/60 * * * *' && 'Stage ' || '' }}Template Registry Smoke Tests Failed
          SLACK_MESSAGE: 'Node Version: ${{ matrix.node-version }}\n Runbook: https://git.corp.adobe.com/CNA/runbooks/tree/main/runbooks/template-registry-smoke-tests-failure.md'
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'cancelled' && '#808080' || 'danger' }}
          ENABLE_ESCAPES: true
